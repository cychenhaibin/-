// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "12/20/2020 19:11:44"

// 
// Device: Altera EP3C16Q240C8 Package PQFP240
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module dig_select (
	dig,
	add);
output 	[5:0] dig;
input 	[2:0] add;

// Design Ports Information
// dig[5]	=>  Location: PIN_20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dig[4]	=>  Location: PIN_19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dig[3]	=>  Location: PIN_9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dig[2]	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dig[1]	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dig[0]	=>  Location: PIN_240,	 I/O Standard: 2.5 V,	 Current Strength: Default
// add[0]	=>  Location: PIN_18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// add[2]	=>  Location: PIN_236,	 I/O Standard: 2.5 V,	 Current Strength: Default
// add[1]	=>  Location: PIN_5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("final_projct_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \dig[5]~output_o ;
wire \dig[4]~output_o ;
wire \dig[3]~output_o ;
wire \dig[2]~output_o ;
wire \dig[1]~output_o ;
wire \dig[0]~output_o ;
wire \add[1]~input_o ;
wire \add[0]~input_o ;
wire \add[2]~input_o ;
wire \inst|15~0_combout ;
wire \inst|15~1_combout ;
wire \inst|15~2_combout ;
wire \inst|15~3_combout ;
wire \inst|15~4_combout ;
wire \inst|15~5_combout ;


// Location: IOOBUF_X0_Y22_N23
cycloneiii_io_obuf \dig[5]~output (
	.i(!\inst|15~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dig[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \dig[5]~output .bus_hold = "false";
defparam \dig[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y22_N16
cycloneiii_io_obuf \dig[4]~output (
	.i(!\inst|15~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dig[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \dig[4]~output .bus_hold = "false";
defparam \dig[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y26_N16
cycloneiii_io_obuf \dig[3]~output (
	.i(!\inst|15~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dig[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \dig[3]~output .bus_hold = "false";
defparam \dig[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y25_N16
cycloneiii_io_obuf \dig[2]~output (
	.i(!\inst|15~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dig[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \dig[2]~output .bus_hold = "false";
defparam \dig[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y27_N16
cycloneiii_io_obuf \dig[1]~output (
	.i(!\inst|15~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dig[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \dig[1]~output .bus_hold = "false";
defparam \dig[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y29_N30
cycloneiii_io_obuf \dig[0]~output (
	.i(!\inst|15~5_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dig[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \dig[0]~output .bus_hold = "false";
defparam \dig[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y27_N8
cycloneiii_io_ibuf \add[1]~input (
	.i(add[1]),
	.ibar(gnd),
	.o(\add[1]~input_o ));
// synopsys translate_off
defparam \add[1]~input .bus_hold = "false";
defparam \add[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y22_N1
cycloneiii_io_ibuf \add[0]~input (
	.i(add[0]),
	.ibar(gnd),
	.o(\add[0]~input_o ));
// synopsys translate_off
defparam \add[0]~input .bus_hold = "false";
defparam \add[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y29_N1
cycloneiii_io_ibuf \add[2]~input (
	.i(add[2]),
	.ibar(gnd),
	.o(\add[2]~input_o ));
// synopsys translate_off
defparam \add[2]~input .bus_hold = "false";
defparam \add[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N24
cycloneiii_lcell_comb \inst|15~0 (
// Equation(s):
// \inst|15~0_combout  = (!\add[1]~input_o  & (\add[0]~input_o  & \add[2]~input_o ))

	.dataa(\add[1]~input_o ),
	.datab(gnd),
	.datac(\add[0]~input_o ),
	.datad(\add[2]~input_o ),
	.cin(gnd),
	.combout(\inst|15~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|15~0 .lut_mask = 16'h5000;
defparam \inst|15~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N26
cycloneiii_lcell_comb \inst|15~1 (
// Equation(s):
// \inst|15~1_combout  = (!\add[1]~input_o  & (!\add[0]~input_o  & \add[2]~input_o ))

	.dataa(\add[1]~input_o ),
	.datab(gnd),
	.datac(\add[0]~input_o ),
	.datad(\add[2]~input_o ),
	.cin(gnd),
	.combout(\inst|15~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst|15~1 .lut_mask = 16'h0500;
defparam \inst|15~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N12
cycloneiii_lcell_comb \inst|15~2 (
// Equation(s):
// \inst|15~2_combout  = (\add[1]~input_o  & (\add[0]~input_o  & !\add[2]~input_o ))

	.dataa(\add[1]~input_o ),
	.datab(gnd),
	.datac(\add[0]~input_o ),
	.datad(\add[2]~input_o ),
	.cin(gnd),
	.combout(\inst|15~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst|15~2 .lut_mask = 16'h00A0;
defparam \inst|15~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N14
cycloneiii_lcell_comb \inst|15~3 (
// Equation(s):
// \inst|15~3_combout  = (\add[1]~input_o  & (!\add[0]~input_o  & !\add[2]~input_o ))

	.dataa(\add[1]~input_o ),
	.datab(gnd),
	.datac(\add[0]~input_o ),
	.datad(\add[2]~input_o ),
	.cin(gnd),
	.combout(\inst|15~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst|15~3 .lut_mask = 16'h000A;
defparam \inst|15~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N0
cycloneiii_lcell_comb \inst|15~4 (
// Equation(s):
// \inst|15~4_combout  = (!\add[1]~input_o  & (\add[0]~input_o  & !\add[2]~input_o ))

	.dataa(\add[1]~input_o ),
	.datab(gnd),
	.datac(\add[0]~input_o ),
	.datad(\add[2]~input_o ),
	.cin(gnd),
	.combout(\inst|15~4_combout ),
	.cout());
// synopsys translate_off
defparam \inst|15~4 .lut_mask = 16'h0050;
defparam \inst|15~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y25_N2
cycloneiii_lcell_comb \inst|15~5 (
// Equation(s):
// \inst|15~5_combout  = (!\add[1]~input_o  & (!\add[0]~input_o  & !\add[2]~input_o ))

	.dataa(\add[1]~input_o ),
	.datab(gnd),
	.datac(\add[0]~input_o ),
	.datad(\add[2]~input_o ),
	.cin(gnd),
	.combout(\inst|15~5_combout ),
	.cout());
// synopsys translate_off
defparam \inst|15~5 .lut_mask = 16'h0005;
defparam \inst|15~5 .sum_lutc_input = "datac";
// synopsys translate_on

assign dig[5] = \dig[5]~output_o ;

assign dig[4] = \dig[4]~output_o ;

assign dig[3] = \dig[3]~output_o ;

assign dig[2] = \dig[2]~output_o ;

assign dig[1] = \dig[1]~output_o ;

assign dig[0] = \dig[0]~output_o ;

endmodule
