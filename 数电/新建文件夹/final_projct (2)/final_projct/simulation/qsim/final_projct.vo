// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "12/20/2020 19:44:34"

// 
// Device: Altera EP3C16Q240C8 Package PQFP240
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decoder (
	seg,
	code);
output 	[6:0] seg;
input 	[3:0] code;

// Design Ports Information
// seg[6]	=>  Location: PIN_221,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[5]	=>  Location: PIN_223,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[4]	=>  Location: PIN_231,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[3]	=>  Location: PIN_230,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[2]	=>  Location: PIN_222,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[1]	=>  Location: PIN_220,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[0]	=>  Location: PIN_226,	 I/O Standard: 2.5 V,	 Current Strength: Default
// code[0]	=>  Location: PIN_71,	 I/O Standard: 2.5 V,	 Current Strength: Default
// code[1]	=>  Location: PIN_235,	 I/O Standard: 2.5 V,	 Current Strength: Default
// code[2]	=>  Location: PIN_63,	 I/O Standard: 2.5 V,	 Current Strength: Default
// code[3]	=>  Location: PIN_83,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \seg[6]~output_o ;
wire \seg[5]~output_o ;
wire \seg[4]~output_o ;
wire \seg[3]~output_o ;
wire \seg[2]~output_o ;
wire \seg[1]~output_o ;
wire \seg[0]~output_o ;
wire \code[1]~input_o ;
wire \code[2]~input_o ;
wire \code[3]~input_o ;
wire \code[0]~input_o ;
wire \inst|72~combout ;
wire \inst|66~0_combout ;
wire \inst|71~combout ;
wire \inst|67~0_combout ;
wire \inst|70~combout ;
wire \inst|68~0_combout ;
wire \inst|69~0_combout ;


// Location: IOOBUF_X11_Y29_N9
cycloneiii_io_obuf \seg[6]~output (
	.i(!\inst|72~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[6]~output .bus_hold = "false";
defparam \seg[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X11_Y29_N30
cycloneiii_io_obuf \seg[5]~output (
	.i(!\inst|66~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[5]~output .bus_hold = "false";
defparam \seg[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y29_N30
cycloneiii_io_obuf \seg[4]~output (
	.i(!\inst|71~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[4]~output .bus_hold = "false";
defparam \seg[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y29_N23
cycloneiii_io_obuf \seg[3]~output (
	.i(\inst|67~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[3]~output .bus_hold = "false";
defparam \seg[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X11_Y29_N16
cycloneiii_io_obuf \seg[2]~output (
	.i(!\inst|70~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[2]~output .bus_hold = "false";
defparam \seg[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X11_Y29_N2
cycloneiii_io_obuf \seg[1]~output (
	.i(!\inst|68~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[1]~output .bus_hold = "false";
defparam \seg[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y29_N9
cycloneiii_io_obuf \seg[0]~output (
	.i(!\inst|69~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[0]~output .bus_hold = "false";
defparam \seg[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X3_Y29_N15
cycloneiii_io_ibuf \code[1]~input (
	.i(code[1]),
	.ibar(gnd),
	.o(\code[1]~input_o ));
// synopsys translate_off
defparam \code[1]~input .bus_hold = "false";
defparam \code[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X3_Y0_N8
cycloneiii_io_ibuf \code[2]~input (
	.i(code[2]),
	.ibar(gnd),
	.o(\code[2]~input_o ));
// synopsys translate_off
defparam \code[2]~input .bus_hold = "false";
defparam \code[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N1
cycloneiii_io_ibuf \code[3]~input (
	.i(code[3]),
	.ibar(gnd),
	.o(\code[3]~input_o ));
// synopsys translate_off
defparam \code[3]~input .bus_hold = "false";
defparam \code[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y0_N22
cycloneiii_io_ibuf \code[0]~input (
	.i(code[0]),
	.ibar(gnd),
	.o(\code[0]~input_o ));
// synopsys translate_off
defparam \code[0]~input .bus_hold = "false";
defparam \code[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N0
cycloneiii_lcell_comb \inst|72 (
// Equation(s):
// \inst|72~combout  = (\code[1]~input_o  & (\code[2]~input_o  & ((\code[0]~input_o )))) # (!\code[1]~input_o  & (!\code[2]~input_o  & (!\code[3]~input_o )))

	.dataa(\code[1]~input_o ),
	.datab(\code[2]~input_o ),
	.datac(\code[3]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|72~combout ),
	.cout());
// synopsys translate_off
defparam \inst|72 .lut_mask = 16'h8901;
defparam \inst|72 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N10
cycloneiii_lcell_comb \inst|66~0 (
// Equation(s):
// \inst|66~0_combout  = (\code[1]~input_o  & (((\code[0]~input_o )) # (!\code[2]~input_o ))) # (!\code[1]~input_o  & (!\code[2]~input_o  & (!\code[3]~input_o  & \code[0]~input_o )))

	.dataa(\code[1]~input_o ),
	.datab(\code[2]~input_o ),
	.datac(\code[3]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|66~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|66~0 .lut_mask = 16'hAB22;
defparam \inst|66~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N4
cycloneiii_lcell_comb \inst|71 (
// Equation(s):
// \inst|71~combout  = (\code[0]~input_o ) # ((\code[2]~input_o  & !\code[1]~input_o ))

	.dataa(gnd),
	.datab(\code[2]~input_o ),
	.datac(\code[1]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|71~combout ),
	.cout());
// synopsys translate_off
defparam \inst|71 .lut_mask = 16'hFF0C;
defparam \inst|71 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N30
cycloneiii_lcell_comb \inst|67~0 (
// Equation(s):
// \inst|67~0_combout  = (\code[2]~input_o  & (\code[1]~input_o  $ (\code[0]~input_o ))) # (!\code[2]~input_o  & ((\code[1]~input_o ) # (!\code[0]~input_o )))

	.dataa(gnd),
	.datab(\code[2]~input_o ),
	.datac(\code[1]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|67~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|67~0 .lut_mask = 16'h3CF3;
defparam \inst|67~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N8
cycloneiii_lcell_comb \inst|70 (
// Equation(s):
// \inst|70~combout  = (\code[2]~input_o  & (((\code[3]~input_o )))) # (!\code[2]~input_o  & (\code[1]~input_o  & ((!\code[0]~input_o ))))

	.dataa(\code[1]~input_o ),
	.datab(\code[2]~input_o ),
	.datac(\code[3]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|70~combout ),
	.cout());
// synopsys translate_off
defparam \inst|70 .lut_mask = 16'hC0E2;
defparam \inst|70 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N26
cycloneiii_lcell_comb \inst|68~0 (
// Equation(s):
// \inst|68~0_combout  = (\code[1]~input_o  & ((\code[3]~input_o ) # ((\code[2]~input_o  & !\code[0]~input_o )))) # (!\code[1]~input_o  & (\code[2]~input_o  & ((\code[0]~input_o ))))

	.dataa(\code[1]~input_o ),
	.datab(\code[2]~input_o ),
	.datac(\code[3]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|68~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|68~0 .lut_mask = 16'hE4A8;
defparam \inst|68~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y28_N28
cycloneiii_lcell_comb \inst|69~0 (
// Equation(s):
// \inst|69~0_combout  = (\code[1]~input_o  & ((\code[3]~input_o ) # ((\code[2]~input_o  & !\code[0]~input_o )))) # (!\code[1]~input_o  & ((\code[2]~input_o  & ((!\code[0]~input_o ))) # (!\code[2]~input_o  & (!\code[3]~input_o  & \code[0]~input_o ))))

	.dataa(\code[1]~input_o ),
	.datab(\code[2]~input_o ),
	.datac(\code[3]~input_o ),
	.datad(\code[0]~input_o ),
	.cin(gnd),
	.combout(\inst|69~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|69~0 .lut_mask = 16'hA1EC;
defparam \inst|69~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign seg[6] = \seg[6]~output_o ;

assign seg[5] = \seg[5]~output_o ;

assign seg[4] = \seg[4]~output_o ;

assign seg[3] = \seg[3]~output_o ;

assign seg[2] = \seg[2]~output_o ;

assign seg[1] = \seg[1]~output_o ;

assign seg[0] = \seg[0]~output_o ;

endmodule
